// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// mcer
Rcpp::List mcer(std::string mc_seq, int mc_order, CharacterVector uniq_states, CharacterVector state_space);
RcppExport SEXP _mcer_mcer(SEXP mc_seqSEXP, SEXP mc_orderSEXP, SEXP uniq_statesSEXP, SEXP state_spaceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type mc_seq(mc_seqSEXP);
    Rcpp::traits::input_parameter< int >::type mc_order(mc_orderSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type uniq_states(uniq_statesSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type state_space(state_spaceSEXP);
    rcpp_result_gen = Rcpp::wrap(mcer(mc_seq, mc_order, uniq_states, state_space));
    return rcpp_result_gen;
END_RCPP
}
// lz77entropy
double lz77entropy(std::string x, int window_size);
RcppExport SEXP _mcer_lz77entropy(SEXP xSEXP, SEXP window_sizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type window_size(window_sizeSEXP);
    rcpp_result_gen = Rcpp::wrap(lz77entropy(x, window_size));
    return rcpp_result_gen;
END_RCPP
}
// lz77entropy_quick
double lz77entropy_quick(std::string x, int window_size);
RcppExport SEXP _mcer_lz77entropy_quick(SEXP xSEXP, SEXP window_sizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type window_size(window_sizeSEXP);
    rcpp_result_gen = Rcpp::wrap(lz77entropy_quick(x, window_size));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_hello
List rcpp_hello();
RcppExport SEXP _mcer_rcpp_hello() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(rcpp_hello());
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_mcer_mcer", (DL_FUNC) &_mcer_mcer, 4},
    {"_mcer_lz77entropy", (DL_FUNC) &_mcer_lz77entropy, 2},
    {"_mcer_lz77entropy_quick", (DL_FUNC) &_mcer_lz77entropy_quick, 2},
    {"_mcer_rcpp_hello", (DL_FUNC) &_mcer_rcpp_hello, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_mcer(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
